name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  id-token: write

env:
  CARGO_TERM_COLOR: never
  RUST_BACKTRACE: 1

jobs:
  build-release:
    name: Build release (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@4f366e621dc8fa63f557ca04b8f4361824a35a45 # stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Resolve working directory
        id: wd
        shell: bash
        run: |
          if [ -f spell-app/magicrune/Cargo.toml ]; then
            echo "value=spell-app/magicrune" >> "$GITHUB_OUTPUT"
          else
            echo "value=." >> "$GITHUB_OUTPUT"
          fi

      - name: Cache dependencies
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5
        with:
          shared-key: ${{ matrix.target }}
          workspaces: ${{ steps.wd.outputs.value }}

      - name: Install cross (musl only)
        if: runner.os == 'Linux' && contains(matrix.target, 'musl')
        run: cargo install cross@0.2.5 --locked

      - name: Build release binary
        working-directory: ${{ steps.wd.outputs.value }}
        shell: bash
        run: |
          if [[ "${{ matrix.target }}" == *"musl"* ]]; then
            cross build --release --target ${{ matrix.target }} --locked
          else
            cargo build --release --target ${{ matrix.target }} --locked
          fi

      - name: Package binary
        shell: bash
        run: |
          mkdir -p artifacts
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            cp target/${{ matrix.target }}/release/*.exe artifacts/ 2>/dev/null || true
          else
            cp target/${{ matrix.target }}/release/bootstrapped artifacts/ 2>/dev/null || true
            cp target/${{ matrix.target }}/release/runeseal artifacts/ 2>/dev/null || true
          fi
          cd artifacts
          tar czf ../bootstrapped-${{ matrix.target }}.tar.gz *

      - name: Upload artifacts
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: bootstrapped-${{ matrix.target }}
          path: bootstrapped-${{ matrix.target }}.tar.gz

  sign-sbom:
    name: Sign SBOM
    runs-on: ubuntu-latest
    needs: build-release
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@4f366e621dc8fa63f557ca04b8f4361824a35a45 # stable
        with:
          toolchain: stable

      - name: Resolve working directory
        id: wd
        shell: bash
        run: |
          if [ -f spell-app/magicrune/Cargo.toml ]; then
            echo "value=spell-app/magicrune" >> "$GITHUB_OUTPUT"
          else
            echo "value=." >> "$GITHUB_OUTPUT"
          fi

      - name: Install cargo-sbom
        run: cargo install cargo-sbom --locked --version 0.9.3

      - name: Generate SBOM
        working-directory: ${{ steps.wd.outputs.value }}
        run: cargo sbom > sbom.spdx.json

      - name: Install cosign
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0

      - name: Sign SBOM with keyless signature
        working-directory: ${{ steps.wd.outputs.value }}
        run: cosign sign-blob --yes --bundle sbom.spdx.json.sig sbom.spdx.json

      - name: Verify signature
        working-directory: ${{ steps.wd.outputs.value }}
        run: cosign verify-blob --bundle sbom.spdx.json.sig sbom.spdx.json

      - name: Upload signed SBOM
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: sbom-signed
          path: |
            ${{ steps.wd.outputs.value }}/sbom.spdx.json
            ${{ steps.wd.outputs.value }}/sbom.spdx.json.sig

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-release, sign-sbom]
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download all artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: artifacts

      - name: Create release
        uses: softprops/action-gh-release@01570a1f39cb168c169c802c3bceb9e93fb10974 # v2.1.0
        with:
          files: |
            artifacts/**/*.tar.gz
            artifacts/sbom-signed/*
          generate_release_notes: true
          draft: false
          prerelease: false